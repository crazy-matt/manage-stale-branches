name: 'CI'

on:
  pull_request:
    types: [opened, synchronize, reopened, review_requested, ready_for_review]
  pull_request_review:
    types: [submitted]

jobs:
  pr_labeler:
    name: 'PR Labeler'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' &&
      (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened') &&
      github.actor != 'dependabot'
    steps:
      - uses: release-drafter/release-drafter@v5.18.0
        with:
          config-name: releaser_config.yml
          disable-autolabeler: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  pr_reviewer:
    name: 'PR Reviewer'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request_review' &&
      github.event.action == 'submitted' &&
      github.event.review.state == 'approved'
    steps:
      - name: 'Label it when approved by reviewer'
        uses: TobKed/label-when-approved-action@v1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          label: 'approved'
          require_committers_approval: true
          remove_label_when_approval_missing: true
  update_documentation:
    name: 'Doc Updater'
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request' && github.event.action == 'review_requested') ||
      (github.event_name == 'pull_request' && github.event.action == 'ready_for_review')
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      - name: 'Set Job Vars'
        id: vars
        run: |
          echo "::set-output name=task_version::$(cat ${{ github.workspace }}/.tool-versions | grep -w task | cut -d ' ' -f2)"
      - name: 'Install asdf dependencies'
        uses: asdf-vm/actions/setup@v1
      - name: 'Install Task'
        uses: arduino/setup-task@v1
        with:
          version: ${{ steps.vars.outputs.task_version }}
      - name: 'Run all formatters'
        run: task format
      - name: 'Check if there are changes'
        id: changes
        uses: collin-miller/git-changesets@v0.0.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          format: csv
      - name: 'Transform change-set'
        id: changes_transform
        run: |
          echo "::set-output name=change_set::$(echo ${{ steps.changes.outputs.added_modified }} | tr ',' '\n')"
      - name: 'Commit-back changes'
        if: steps.changes.outputs.changed == 1
        uses: swinton/commit@v2.0.0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ steps.changes_transform.outputs.change_set }}
          commit-message: 'update formatted files'
          ref: ${{ github.head_ref }}
