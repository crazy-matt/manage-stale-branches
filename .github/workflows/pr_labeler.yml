name: 'CI'

on:
  pull_request_target:
    types: [opened, synchronize, reopened, review_requested, ready_for_review, labeled]
  pull_request_review:
    types: [submitted]

jobs:
  pr_labeler:
    name: 'PR Labeler'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request_target' &&
      (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened') &&
      github.actor != 'dependabot[bot]'
    steps:
      - uses: release-drafter/release-drafter@v5.23.0
        with:
          config-name: releaser_config.yml
          disable-autolabeler: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  update_documentation:
    name: 'Doc Updater'
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.event.action == 'review_requested') ||
      (github.event_name == 'pull_request_target' && github.event.action == 'ready_for_review') ||
      (github.event_name == 'pull_request_target' && github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'approved') == true)
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Set Job Vars'
        id: vars
        run: |
          echo "task_version=$(cat ${{ github.workspace }}/.tool-versions | grep -w task | cut -d ' ' -f2)" >> $GITHUB_OUTPUT
      - name: 'Install asdf dependencies'
        uses: asdf-vm/actions/setup@v1
      - name: 'Install Task'
        uses: arduino/setup-task@v1
        with:
          version: ${{ steps.vars.outputs.task_version }}
      - name: 'Run all formatters'
        run: task format
      - name: 'Get changed files'
        id: changes
        uses: tj-actions/verify-changed-files@v12.0
        with:
          separator: '\n'
      - name: 'Commit-back changes'
        if: steps.changes.outputs.changed_files != ''
        uses: swinton/commit@v2.0.0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ steps.changes.outputs.changed_files }}
          commit-message: 'update auto-formatted files'
          ref: ${{ github.head_ref }}
